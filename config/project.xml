<?xml version="1.0" encoding="UTF-8"?>
<project name="" basedir="." default="...">




    <!-- ==================================== -->
    <!--              Properties              -->
    <!-- ==================================== -->




    <property name="build.environment" value="default" />
    <property name="build.public_dir" value="${build.path}/public" />
    <property name="build.log_dir" value="${build.path}/storage/logs" />
    <property name="db.data_path" value="${build.path}/storage/database" />




    <!-- ==================================== -->
    <!--             Dependencies             -->
    <!-- ==================================== -->




    <import file="${phingy.path}/scripts/core/database.xml" />




    <!-- ==================================== -->
    <!--                Tasks                 -->
    <!-- ==================================== -->




    <target name="project:config" depends="build:config, db:config" hidden="true">
        <echo msg="Running project:config" />

        <if>
            <not>
                <isset property="app.debug" />
            </not>
            <then>
                <propertyPrompt
                    propertyName="app.debug"
                    defaultValue=""
                    promptText="Enable debug? (1,0)"
                    useExistingValue="true"
                />

                <phingcall target="build:save_config" />
            </then>
        </if>
    </target>


    <target name="project:build:before" hidden="true">
        <echo msg="Running project:build:before" />
    </target>


    <target name="project:build:after" hidden="true">
        <echo msg="Running project:build:after" />
        <phingcall target="wordpress:permissions" />
        <phingcall target="wordpress:generatesalts" />
    </target>


    <target name="project:build:housekeeping" hidden="true">
        <echo msg="Running project:build:housekeeping" />
    </target>


    <!--
        Set WordPress permissions.
    -->

    <target name="wordpress:permissions" depends="project:config" hidden="true">
        <echo msg="Setup permissions for WordPress..." />
        <mkdir dir="${build.public_dir}/app/uploads" />
        <chmod file="${build.public_dir}/app/uploads" mode="0754" failonerror="false" />
        <echo msg="...done" />
    </target>


    <!--
        Install a new WordPress site.
    -->

    <target name="wordpress:install" depends="project:config, db:create" description="Install a new WordPress site">
        <echo msg="Installing WordPress..." />

        <input propertyname="wordpress.site_title" defaultValue="My WordPress Site">WordPress site title?</input>
        <input propertyname="wordpress.admin_user" defaultValue="">Admin username?</input>
        <input propertyname="wordpress.admin_pass" defaultValue="">Admin password?</input>
        <input propertyname="wordpress.admin_email" defaultValue="">Admin email?</input>

        <exec command="bin/wp core install --url='&quot;&quot;' --title='${wordpress.site_title}' --admin_user='${wordpress.admin_user}' --admin_password='${wordpress.admin_pass}' --admin_email='${wordpress.admin_email}'" passthru="true" />

        <echo msg="...installation complete. Access your site at http://${build.url}/" />
    </target>


    <!--
        Generate fresh WordPress salts.
    -->

    <taskdef name="addsalt" classname="Tev\Phing\Wordpress\GenerateSaltTask" />
    <target name="wordpress:generatesalts" depends="project:config" description="Generate fresh WordPress salts">
        <delete file="${build.path}/.env.salts" quiet="true" />
        <touch file="${build.path}/.env.salts" />

        <addsalt path="${build.path}/.env.salts" name="AUTH_KEY" />
        <addsalt path="${build.path}/.env.salts" name="SECURE_AUTH_KEY" />
        <addsalt path="${build.path}/.env.salts" name="LOGGED_IN_KEY" />
        <addsalt path="${build.path}/.env.salts" name="NONCE_KEY" />
        <addsalt path="${build.path}/.env.salts" name="AUTH_SALT" />
        <addsalt path="${build.path}/.env.salts" name="SECURE_AUTH_SALT" />
        <addsalt path="${build.path}/.env.salts" name="LOGGED_IN_SALT" />
        <addsalt path="${build.path}/.env.salts" name="NONCE_SALT" />
    </target>


    <!--
        Start cron scripts
    -->

    <target name="project:cron:start" description="Start all crons listed in config/crontab">
        <echo msg="Starting crons..." />
        <exec command="sudo cp ${build.path}/config/crontab /etc/cron.d/${build.name}" />
        <echo msg="...done" />
    </target>


    <!--
        Stop cron scripts
    -->

    <target name="project:cron:stop" description="Stop all crons listed in config/crontab">
        <echo msg="Stopping crons..." />
        <exec command="sudo rm /etc/cron.d/${build.name}" />
        <echo msg="...done" />
    </target>


</project>
